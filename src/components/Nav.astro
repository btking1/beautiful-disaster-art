---
// import MenuIcon from "../components/Icons/MenuIcon.astro";
// import CloseIcon from "../components/Icons/CloseIcon.astro";
const links = [
  { href: "/", label: "Home" },
  { href: "/gallery", label: "gallery" },
  { href: "/events", label: "events" },
  { href: "/contact", label: "contact" },
  { href: "/shop", label: "shop (comming soon!)" },
];
---

<nav
  class="flex py-2 px-3 justify-between items-end border border-solid border-red-400"
>
  <ul
    id="menu"
    data-visible="false"
    class="flex-col w-full top-0 left-0 h-full fixed overflow-hidden z-20 justify-center items-center gap-y-3"
  >
    {
      links.map((link) => {
        return (
          <li class="text-white text-3xl font-thin">
            <a href={link.href}>{link.label}</a>
          </li>
        );
      })
    }
  </ul>
  <h1>
    Beautiful <span>Disaster Art</span>
  </h1>
  <button id="menu-button" class=""></button>
  <button id="close-button" class="z-[50] hidden"> </button>
</nav>
<script>
  // define:vars={{ isHidden }}
  const menuButton = document.querySelector("#menu-button");
  const closeButton = document.querySelector("#close-button");
  const menu = document.querySelector("#menu");

  const visibility = menu.getAttribute("data-visible");
  // const menuButtonVis = menuButton.getAttribute("data-visible");
  // const closeButtonVis = closeButton.getAttribute("data-visible");

  function toggleMenu() {
    if ((closeButton.style.display = "none")) {
      menu.style.display = "flex";
      menu.style.transform = "translateY(0%)";
      closeButton.style.display = "block";

      menuButton.style.display = "none";
    }
  }
  function closeMenu() {
    if ((closeButton.style.display = "sticky")) {
      menu.style.transform = "translateY(-100%)";
      closeButton.style.display = "none";
      menuButton.style.display = "block";
    }
  }

  menuButton.addEventListener("click", toggleMenu);
  closeButton.addEventListener("click", closeMenu);
</script>
<style>
  h1 {
    color: var(--accent-4);
    font-family: var(--inconsolata);
    font-weight: 400;
    font-size: var(--h1);
    text-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
  }

  h1 > span {
    color: var(--primary);
  }
  /* #menu[data-visible="true"] {
    transform: translateY(0%);
  } */
  #menu {
    transform: translateY(-100%);
    background-color: var(--accent-secondary-alpha);
    backdrop-filter: blur(0.2rem);
    transition: transform 500ms ease-out;
  }
  li {
    font-family: var(--athiti);
  }

  #menu-button {
    z-index: 100;
    width: 2rem;
    aspect-ratio: 1;
    border: 0;
    background: url("/public/assets/icons/menu-outline.svg");
    background-size: cover;
    background-repeat: no-repeat;
  }
  #close-button {
    margin: 0.75rem;
    z-index: 100;
    width: 2rem;
    aspect-ratio: 1;
    position: fixed;
    top: 0;
    right: 0;
    border: 0;
    background: url("/public/assets/icons/close-menu.svg");
    background-size: cover;

    background-repeat: no-repeat;
  }
</style>
