---
import { Image, Picture } from "@astrojs/image/components";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

// art?: CollectionEntry<"art">[];

const art: CollectionEntry<"art">[] = await getCollection("art");

const { amount, radius } = Astro.props;
let artAmount = art.slice(0, amount);
console.log(art.slice(0, 2));
let isRadius = radius ? "1%" : "0";
---

<div class="image-container">
  {
    artAmount.map((image) => (
      <div class="image-item">
        <Image
          class="image"
          style={{ borderRadius: isRadius }}
          src={image.data.image}
          alt={image.data.title}
          data-title={`${image.data.title}`}
          width={1400}
          height={1400}
          aspectRatio={"1:1"}
          format="jpg"
        />

        <div class="overlay">
          <div class="text">{image.data.title}</div>
        </div>
      </div>
    ))
  }
</div>

<script>
  const imgList = document.querySelector(".image-container") as HTMLElement;
  const images = imgList.querySelectorAll(
    ".image-item img"
  ) as NodeListOf<HTMLImageElement>;
  const overlay = document.querySelector(".overlay") as HTMLElement;
  const text: Element = document.querySelector(".text") as HTMLElement;
  // get the width of the div .overlay
  const overlayWidth = overlay.offsetWidth;
  console.log(overlayWidth);
  console.log(imgList.childNodes);
  // (`transform-[translateX(-${overlayWidth}px)]`)
  const handleLoad = () => {
    for (let i = 0; i < images.length; i++) {
      images[i].classList.add("img-fade");
    }
  };

  window.addEventListener("load", handleLoad);
</script>

<style define:vars={{ isRadius }}>
  .image-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    justify-content: center;
  }

  .image-item {
    flex: 1 1 100%;
    position: relative;
    max-width: 100%;
  }

  @media (min-width: 768px) {
    .image-item {
      flex: 1 1 calc(50% - 1rem);
    }
  }

  @media (min-width: 1024px) {
    .image-item {
      flex: 1 1 calc(25% - 1rem);
    }
  }

  img {
    display: none;
    width: 100%;
    opacity: 0;
    -webkit-transform: scale(1);
    transform: scale(1);
    -webkit-filter: blur(2rem);
    filter: blur(2rem);
    -webkit-transition: opacity 1s ease-in, filter 1s ease-in;
    transition: opacity 1s ease-in, filter 1s ease-in;
  }

  .img-fade {
    display: block;
    opacity: 1;
    -webkit-filter: blur(0rem);
    filter: blur(0rem);
  }
  img:hover {
    -webkit-transform: scale(1.02);
    transform: scale(1.02);
    -webkit-transition: -webkit-transform 500ms ease-out;
    transition: transform 500ms ease-out;
    cursor: pointer;
  }
  .overlay {
    width: 100%;
    z-index: 10;
    opacity: 0;
    position: absolute;
    inset: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    -webkit-transition: all 0.5s ease;
    transition: opacity 0.5s ease;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .text {
    color: white;
    font-size: 24px;
    font-family: var(--inconsolata);
    font-weight: 300;
    text-align: center;
  }
  .overlay:hover {
    opacity: 1;
    cursor: pointer;
  }
</style>
